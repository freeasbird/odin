// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth.proto

package odinX

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request struct {
	App                  string   `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Date                 int64    `protobuf:"varint,3,opt,name=date,proto3" json:"date,omitempty"`
	Verify               string   `protobuf:"bytes,4,opt,name=verify,proto3" json:"verify,omitempty"`
	Umd5                 string   `protobuf:"bytes,5,opt,name=umd5,proto3" json:"umd5,omitempty"`
	Lease                int64    `protobuf:"varint,6,opt,name=lease,proto3" json:"lease,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

func (m *Request) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Request) GetDate() int64 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *Request) GetVerify() string {
	if m != nil {
		return m.Verify
	}
	return ""
}

func (m *Request) GetUmd5() string {
	if m != nil {
		return m.Umd5
	}
	return ""
}

func (m *Request) GetLease() int64 {
	if m != nil {
		return m.Lease
	}
	return 0
}

type Data struct {
	Auth                 []byte   `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Lease                int64    `protobuf:"varint,2,opt,name=lease,proto3" json:"lease,omitempty"`
	Cipher               []byte   `protobuf:"bytes,3,opt,name=cipher,proto3" json:"cipher,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Data) Reset()         { *m = Data{} }
func (m *Data) String() string { return proto.CompactTextString(m) }
func (*Data) ProtoMessage()    {}
func (*Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{1}
}

func (m *Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Data.Unmarshal(m, b)
}
func (m *Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Data.Marshal(b, m, deterministic)
}
func (m *Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Data.Merge(m, src)
}
func (m *Data) XXX_Size() int {
	return xxx_messageInfo_Data.Size(m)
}
func (m *Data) XXX_DiscardUnknown() {
	xxx_messageInfo_Data.DiscardUnknown(m)
}

var xxx_messageInfo_Data proto.InternalMessageInfo

func (m *Data) GetAuth() []byte {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *Data) GetLease() int64 {
	if m != nil {
		return m.Lease
	}
	return 0
}

func (m *Data) GetCipher() []byte {
	if m != nil {
		return m.Cipher
	}
	return nil
}

type Response struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Data                 *Data    `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Msg                  string   `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{2}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Response) GetData() *Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Response) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "odinX.Request")
	proto.RegisterType((*Data)(nil), "odinX.Data")
	proto.RegisterType((*Response)(nil), "odinX.Response")
}

func init() { proto.RegisterFile("auth.proto", fileDescriptor_8bbd6f3875b0e874) }

var fileDescriptor_8bbd6f3875b0e874 = []byte{
	// 280 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x51, 0x4d, 0x4b, 0xc3, 0x40,
	0x10, 0x25, 0x9f, 0x6d, 0xa6, 0xa5, 0xca, 0x22, 0xb2, 0x78, 0xb1, 0xe4, 0x62, 0x51, 0xc8, 0xa1,
	0xe2, 0x0f, 0x10, 0x3c, 0x08, 0x0a, 0xe2, 0x9e, 0xbc, 0xae, 0xdd, 0x89, 0x59, 0xb0, 0xd9, 0x35,
	0xd9, 0x08, 0x7a, 0xf3, 0x07, 0xf8, 0x9f, 0x65, 0xc6, 0xa0, 0xde, 0xec, 0xed, 0xbd, 0xe1, 0xbd,
	0x37, 0x6f, 0x67, 0x01, 0xf4, 0x10, 0x9a, 0xca, 0x77, 0x2e, 0x38, 0x91, 0x39, 0x63, 0xdb, 0x87,
	0xf2, 0x23, 0x82, 0x89, 0xc2, 0x97, 0x01, 0xfb, 0x20, 0xf6, 0x21, 0xd1, 0xde, 0xcb, 0x68, 0x19,
	0xad, 0x0a, 0x45, 0x50, 0x2c, 0x20, 0xb6, 0x46, 0xc6, 0x3c, 0x88, 0xad, 0x11, 0x02, 0x52, 0xa3,
	0x03, 0xca, 0x64, 0x19, 0xad, 0x12, 0xc5, 0x58, 0x1c, 0x42, 0xfe, 0x8a, 0x9d, 0xad, 0xdf, 0x64,
	0xca, 0xba, 0x91, 0x91, 0x76, 0xd8, 0x9a, 0x0b, 0x99, 0xf1, 0x94, 0xb1, 0x38, 0x80, 0xec, 0x19,
	0x75, 0x8f, 0x32, 0xe7, 0x80, 0x6f, 0x52, 0x5e, 0x43, 0x7a, 0xa5, 0x83, 0x26, 0x07, 0x15, 0xe4,
	0x02, 0x73, 0xc5, 0xf8, 0xd7, 0x11, 0xff, 0x71, 0xd0, 0xce, 0x8d, 0xf5, 0x0d, 0x76, 0xdc, 0x64,
	0xae, 0x46, 0x56, 0xde, 0xc3, 0x54, 0x61, 0xef, 0x5d, 0xdb, 0x23, 0xa5, 0x6d, 0x9c, 0x41, 0x4e,
	0xcb, 0x14, 0x63, 0x71, 0xcc, 0xfd, 0x35, 0x87, 0xcd, 0xd6, 0xb3, 0x8a, 0x6f, 0x50, 0xd1, 0x72,
	0x7e, 0x8c, 0xa6, 0x13, 0x6c, 0xfb, 0x27, 0x4e, 0x2d, 0x14, 0xc1, 0xf5, 0x67, 0x04, 0xc5, 0xe5,
	0x10, 0x1a, 0xd7, 0xd9, 0x77, 0x14, 0x27, 0x90, 0x12, 0x11, 0x8b, 0xd1, 0x3a, 0x9e, 0xee, 0x68,
	0xef, 0x87, 0x8f, 0xdb, 0xcf, 0x60, 0x7a, 0x83, 0xe8, 0x6f, 0x6d, 0x8b, 0xff, 0x8b, 0x4f, 0x61,
	0x72, 0x57, 0xd7, 0x3b, 0x69, 0x1f, 0x73, 0xfe, 0xbe, 0xf3, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x1a, 0x98, 0x14, 0xf9, 0xcc, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthorizeClient is the client API for Authorize service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthorizeClient interface {
	Auth(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	KeepLine(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	OffLine(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type authorizeClient struct {
	cc *grpc.ClientConn
}

func NewAuthorizeClient(cc *grpc.ClientConn) AuthorizeClient {
	return &authorizeClient{cc}
}

func (c *authorizeClient) Auth(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/odinX.Authorize/Auth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizeClient) KeepLine(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/odinX.Authorize/KeepLine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizeClient) OffLine(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/odinX.Authorize/OffLine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthorizeServer is the server API for Authorize service.
type AuthorizeServer interface {
	Auth(context.Context, *Request) (*Response, error)
	KeepLine(context.Context, *Request) (*Response, error)
	OffLine(context.Context, *Request) (*Response, error)
}

func RegisterAuthorizeServer(s *grpc.Server, srv AuthorizeServer) {
	s.RegisterService(&_Authorize_serviceDesc, srv)
}

func _Authorize_Auth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).Auth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odinX.Authorize/Auth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).Auth(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authorize_KeepLine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).KeepLine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odinX.Authorize/KeepLine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).KeepLine(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authorize_OffLine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).OffLine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odinX.Authorize/OffLine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).OffLine(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Authorize_serviceDesc = grpc.ServiceDesc{
	ServiceName: "odinX.Authorize",
	HandlerType: (*AuthorizeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Auth",
			Handler:    _Authorize_Auth_Handler,
		},
		{
			MethodName: "KeepLine",
			Handler:    _Authorize_KeepLine_Handler,
		},
		{
			MethodName: "OffLine",
			Handler:    _Authorize_OffLine_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth.proto",
}
