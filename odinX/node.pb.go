// Code generated by protoc-gen-go. DO NOT EDIT.
// source: node.proto

package odinX

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Args struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Addr                 string   `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Args) Reset()         { *m = Args{} }
func (m *Args) String() string { return proto.CompactTextString(m) }
func (*Args) ProtoMessage()    {}
func (*Args) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{0}
}

func (m *Args) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Args.Unmarshal(m, b)
}
func (m *Args) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Args.Marshal(b, m, deterministic)
}
func (m *Args) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Args.Merge(m, src)
}
func (m *Args) XXX_Size() int {
	return xxx_messageInfo_Args.Size(m)
}
func (m *Args) XXX_DiscardUnknown() {
	xxx_messageInfo_Args.DiscardUnknown(m)
}

var xxx_messageInfo_Args proto.InternalMessageInfo

func (m *Args) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Args) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type Node struct {
	Attrs                *Attrs    `protobuf:"bytes,1,opt,name=attrs,proto3" json:"attrs,omitempty"`
	Hardware             *Hardware `protobuf:"bytes,2,opt,name=hardware,proto3" json:"hardware,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{1}
}

func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetAttrs() *Attrs {
	if m != nil {
		return m.Attrs
	}
	return nil
}

func (m *Node) GetHardware() *Hardware {
	if m != nil {
		return m.Hardware
	}
	return nil
}

type Attrs struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Addr                 string   `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Start                int64    `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	Hwmd5                string   `protobuf:"bytes,4,opt,name=hwmd5,proto3" json:"hwmd5,omitempty"`
	Now                  int64    `protobuf:"varint,5,opt,name=now,proto3" json:"now,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Attrs) Reset()         { *m = Attrs{} }
func (m *Attrs) String() string { return proto.CompactTextString(m) }
func (*Attrs) ProtoMessage()    {}
func (*Attrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{2}
}

func (m *Attrs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Attrs.Unmarshal(m, b)
}
func (m *Attrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Attrs.Marshal(b, m, deterministic)
}
func (m *Attrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Attrs.Merge(m, src)
}
func (m *Attrs) XXX_Size() int {
	return xxx_messageInfo_Attrs.Size(m)
}
func (m *Attrs) XXX_DiscardUnknown() {
	xxx_messageInfo_Attrs.DiscardUnknown(m)
}

var xxx_messageInfo_Attrs proto.InternalMessageInfo

func (m *Attrs) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Attrs) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *Attrs) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *Attrs) GetHwmd5() string {
	if m != nil {
		return m.Hwmd5
	}
	return ""
}

func (m *Attrs) GetNow() int64 {
	if m != nil {
		return m.Now
	}
	return 0
}

type Hardware struct {
	Host                 *Host      `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Product              *Product   `protobuf:"bytes,2,opt,name=product,proto3" json:"product,omitempty"`
	Board                *Board     `protobuf:"bytes,3,opt,name=board,proto3" json:"board,omitempty"`
	Bios                 *Bios      `protobuf:"bytes,4,opt,name=bios,proto3" json:"bios,omitempty"`
	Cpu                  *Cpu       `protobuf:"bytes,5,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Mem                  *Mem       `protobuf:"bytes,6,opt,name=mem,proto3" json:"mem,omitempty"`
	Networks             []*Network `protobuf:"bytes,7,rep,name=networks,proto3" json:"networks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Hardware) Reset()         { *m = Hardware{} }
func (m *Hardware) String() string { return proto.CompactTextString(m) }
func (*Hardware) ProtoMessage()    {}
func (*Hardware) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{3}
}

func (m *Hardware) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Hardware.Unmarshal(m, b)
}
func (m *Hardware) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Hardware.Marshal(b, m, deterministic)
}
func (m *Hardware) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hardware.Merge(m, src)
}
func (m *Hardware) XXX_Size() int {
	return xxx_messageInfo_Hardware.Size(m)
}
func (m *Hardware) XXX_DiscardUnknown() {
	xxx_messageInfo_Hardware.DiscardUnknown(m)
}

var xxx_messageInfo_Hardware proto.InternalMessageInfo

func (m *Hardware) GetHost() *Host {
	if m != nil {
		return m.Host
	}
	return nil
}

func (m *Hardware) GetProduct() *Product {
	if m != nil {
		return m.Product
	}
	return nil
}

func (m *Hardware) GetBoard() *Board {
	if m != nil {
		return m.Board
	}
	return nil
}

func (m *Hardware) GetBios() *Bios {
	if m != nil {
		return m.Bios
	}
	return nil
}

func (m *Hardware) GetCpu() *Cpu {
	if m != nil {
		return m.Cpu
	}
	return nil
}

func (m *Hardware) GetMem() *Mem {
	if m != nil {
		return m.Mem
	}
	return nil
}

func (m *Hardware) GetNetworks() []*Network {
	if m != nil {
		return m.Networks
	}
	return nil
}

type Host struct {
	Machineid            string   `protobuf:"bytes,1,opt,name=machineid,proto3" json:"machineid,omitempty"`
	Hypervisor           string   `protobuf:"bytes,2,opt,name=hypervisor,proto3" json:"hypervisor,omitempty"`
	Architecture         string   `protobuf:"bytes,3,opt,name=architecture,proto3" json:"architecture,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Host) Reset()         { *m = Host{} }
func (m *Host) String() string { return proto.CompactTextString(m) }
func (*Host) ProtoMessage()    {}
func (*Host) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{4}
}

func (m *Host) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Host.Unmarshal(m, b)
}
func (m *Host) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Host.Marshal(b, m, deterministic)
}
func (m *Host) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Host.Merge(m, src)
}
func (m *Host) XXX_Size() int {
	return xxx_messageInfo_Host.Size(m)
}
func (m *Host) XXX_DiscardUnknown() {
	xxx_messageInfo_Host.DiscardUnknown(m)
}

var xxx_messageInfo_Host proto.InternalMessageInfo

func (m *Host) GetMachineid() string {
	if m != nil {
		return m.Machineid
	}
	return ""
}

func (m *Host) GetHypervisor() string {
	if m != nil {
		return m.Hypervisor
	}
	return ""
}

func (m *Host) GetArchitecture() string {
	if m != nil {
		return m.Architecture
	}
	return ""
}

type Product struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Vendor               string   `protobuf:"bytes,2,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Serial               string   `protobuf:"bytes,3,opt,name=serial,proto3" json:"serial,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Product) Reset()         { *m = Product{} }
func (m *Product) String() string { return proto.CompactTextString(m) }
func (*Product) ProtoMessage()    {}
func (*Product) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{5}
}

func (m *Product) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Product.Unmarshal(m, b)
}
func (m *Product) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Product.Marshal(b, m, deterministic)
}
func (m *Product) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Product.Merge(m, src)
}
func (m *Product) XXX_Size() int {
	return xxx_messageInfo_Product.Size(m)
}
func (m *Product) XXX_DiscardUnknown() {
	xxx_messageInfo_Product.DiscardUnknown(m)
}

var xxx_messageInfo_Product proto.InternalMessageInfo

func (m *Product) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Product) GetVendor() string {
	if m != nil {
		return m.Vendor
	}
	return ""
}

func (m *Product) GetSerial() string {
	if m != nil {
		return m.Serial
	}
	return ""
}

// 主板
type Board struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Vendor               string   `protobuf:"bytes,2,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Serial               string   `protobuf:"bytes,3,opt,name=serial,proto3" json:"serial,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Board) Reset()         { *m = Board{} }
func (m *Board) String() string { return proto.CompactTextString(m) }
func (*Board) ProtoMessage()    {}
func (*Board) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{6}
}

func (m *Board) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Board.Unmarshal(m, b)
}
func (m *Board) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Board.Marshal(b, m, deterministic)
}
func (m *Board) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Board.Merge(m, src)
}
func (m *Board) XXX_Size() int {
	return xxx_messageInfo_Board.Size(m)
}
func (m *Board) XXX_DiscardUnknown() {
	xxx_messageInfo_Board.DiscardUnknown(m)
}

var xxx_messageInfo_Board proto.InternalMessageInfo

func (m *Board) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Board) GetVendor() string {
	if m != nil {
		return m.Vendor
	}
	return ""
}

func (m *Board) GetSerial() string {
	if m != nil {
		return m.Serial
	}
	return ""
}

type Bios struct {
	Vendor               string   `protobuf:"bytes,1,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Date                 string   `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bios) Reset()         { *m = Bios{} }
func (m *Bios) String() string { return proto.CompactTextString(m) }
func (*Bios) ProtoMessage()    {}
func (*Bios) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{7}
}

func (m *Bios) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bios.Unmarshal(m, b)
}
func (m *Bios) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bios.Marshal(b, m, deterministic)
}
func (m *Bios) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bios.Merge(m, src)
}
func (m *Bios) XXX_Size() int {
	return xxx_messageInfo_Bios.Size(m)
}
func (m *Bios) XXX_DiscardUnknown() {
	xxx_messageInfo_Bios.DiscardUnknown(m)
}

var xxx_messageInfo_Bios proto.InternalMessageInfo

func (m *Bios) GetVendor() string {
	if m != nil {
		return m.Vendor
	}
	return ""
}

func (m *Bios) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Bios) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

type Cpu struct {
	Vendor               string   `protobuf:"bytes,1,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Model                string   `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	Speed                uint32   `protobuf:"varint,3,opt,name=speed,proto3" json:"speed,omitempty"`
	Cache                uint32   `protobuf:"varint,4,opt,name=cache,proto3" json:"cache,omitempty"`
	Cpus                 uint32   `protobuf:"varint,5,opt,name=cpus,proto3" json:"cpus,omitempty"`
	Cores                uint32   `protobuf:"varint,6,opt,name=cores,proto3" json:"cores,omitempty"`
	Threads              uint32   `protobuf:"varint,7,opt,name=threads,proto3" json:"threads,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cpu) Reset()         { *m = Cpu{} }
func (m *Cpu) String() string { return proto.CompactTextString(m) }
func (*Cpu) ProtoMessage()    {}
func (*Cpu) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{8}
}

func (m *Cpu) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cpu.Unmarshal(m, b)
}
func (m *Cpu) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cpu.Marshal(b, m, deterministic)
}
func (m *Cpu) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cpu.Merge(m, src)
}
func (m *Cpu) XXX_Size() int {
	return xxx_messageInfo_Cpu.Size(m)
}
func (m *Cpu) XXX_DiscardUnknown() {
	xxx_messageInfo_Cpu.DiscardUnknown(m)
}

var xxx_messageInfo_Cpu proto.InternalMessageInfo

func (m *Cpu) GetVendor() string {
	if m != nil {
		return m.Vendor
	}
	return ""
}

func (m *Cpu) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *Cpu) GetSpeed() uint32 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *Cpu) GetCache() uint32 {
	if m != nil {
		return m.Cache
	}
	return 0
}

func (m *Cpu) GetCpus() uint32 {
	if m != nil {
		return m.Cpus
	}
	return 0
}

func (m *Cpu) GetCores() uint32 {
	if m != nil {
		return m.Cores
	}
	return 0
}

func (m *Cpu) GetThreads() uint32 {
	if m != nil {
		return m.Threads
	}
	return 0
}

type Mem struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Speed                uint32   `protobuf:"varint,2,opt,name=speed,proto3" json:"speed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Mem) Reset()         { *m = Mem{} }
func (m *Mem) String() string { return proto.CompactTextString(m) }
func (*Mem) ProtoMessage()    {}
func (*Mem) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{9}
}

func (m *Mem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Mem.Unmarshal(m, b)
}
func (m *Mem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Mem.Marshal(b, m, deterministic)
}
func (m *Mem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Mem.Merge(m, src)
}
func (m *Mem) XXX_Size() int {
	return xxx_messageInfo_Mem.Size(m)
}
func (m *Mem) XXX_DiscardUnknown() {
	xxx_messageInfo_Mem.DiscardUnknown(m)
}

var xxx_messageInfo_Mem proto.InternalMessageInfo

func (m *Mem) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Mem) GetSpeed() uint32 {
	if m != nil {
		return m.Speed
	}
	return 0
}

type Network struct {
	Driver               string   `protobuf:"bytes,1,opt,name=driver,proto3" json:"driver,omitempty"`
	Macaddress           string   `protobuf:"bytes,2,opt,name=macaddress,proto3" json:"macaddress,omitempty"`
	Speed                uint32   `protobuf:"varint,3,opt,name=speed,proto3" json:"speed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Network) Reset()         { *m = Network{} }
func (m *Network) String() string { return proto.CompactTextString(m) }
func (*Network) ProtoMessage()    {}
func (*Network) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{10}
}

func (m *Network) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Network.Unmarshal(m, b)
}
func (m *Network) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Network.Marshal(b, m, deterministic)
}
func (m *Network) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Network.Merge(m, src)
}
func (m *Network) XXX_Size() int {
	return xxx_messageInfo_Network.Size(m)
}
func (m *Network) XXX_DiscardUnknown() {
	xxx_messageInfo_Network.DiscardUnknown(m)
}

var xxx_messageInfo_Network proto.InternalMessageInfo

func (m *Network) GetDriver() string {
	if m != nil {
		return m.Driver
	}
	return ""
}

func (m *Network) GetMacaddress() string {
	if m != nil {
		return m.Macaddress
	}
	return ""
}

func (m *Network) GetSpeed() uint32 {
	if m != nil {
		return m.Speed
	}
	return 0
}

type Request struct {
	App                  string   `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Date                 int64    `protobuf:"varint,3,opt,name=date,proto3" json:"date,omitempty"`
	Verify               string   `protobuf:"bytes,4,opt,name=verify,proto3" json:"verify,omitempty"`
	Umd5                 string   `protobuf:"bytes,5,opt,name=umd5,proto3" json:"umd5,omitempty"`
	Lease                int64    `protobuf:"varint,6,opt,name=lease,proto3" json:"lease,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{11}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

func (m *Request) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Request) GetDate() int64 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *Request) GetVerify() string {
	if m != nil {
		return m.Verify
	}
	return ""
}

func (m *Request) GetUmd5() string {
	if m != nil {
		return m.Umd5
	}
	return ""
}

func (m *Request) GetLease() int64 {
	if m != nil {
		return m.Lease
	}
	return 0
}

type Data struct {
	Auth                 []byte   `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Lease                int64    `protobuf:"varint,2,opt,name=lease,proto3" json:"lease,omitempty"`
	Cipher               []byte   `protobuf:"bytes,3,opt,name=cipher,proto3" json:"cipher,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Data) Reset()         { *m = Data{} }
func (m *Data) String() string { return proto.CompactTextString(m) }
func (*Data) ProtoMessage()    {}
func (*Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{12}
}

func (m *Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Data.Unmarshal(m, b)
}
func (m *Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Data.Marshal(b, m, deterministic)
}
func (m *Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Data.Merge(m, src)
}
func (m *Data) XXX_Size() int {
	return xxx_messageInfo_Data.Size(m)
}
func (m *Data) XXX_DiscardUnknown() {
	xxx_messageInfo_Data.DiscardUnknown(m)
}

var xxx_messageInfo_Data proto.InternalMessageInfo

func (m *Data) GetAuth() []byte {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *Data) GetLease() int64 {
	if m != nil {
		return m.Lease
	}
	return 0
}

func (m *Data) GetCipher() []byte {
	if m != nil {
		return m.Cipher
	}
	return nil
}

type Response struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Data                 *Data    `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Msg                  string   `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{13}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Response) GetData() *Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Response) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*Args)(nil), "odinX.Args")
	proto.RegisterType((*Node)(nil), "odinX.Node")
	proto.RegisterType((*Attrs)(nil), "odinX.Attrs")
	proto.RegisterType((*Hardware)(nil), "odinX.Hardware")
	proto.RegisterType((*Host)(nil), "odinX.Host")
	proto.RegisterType((*Product)(nil), "odinX.Product")
	proto.RegisterType((*Board)(nil), "odinX.Board")
	proto.RegisterType((*Bios)(nil), "odinX.Bios")
	proto.RegisterType((*Cpu)(nil), "odinX.Cpu")
	proto.RegisterType((*Mem)(nil), "odinX.Mem")
	proto.RegisterType((*Network)(nil), "odinX.Network")
	proto.RegisterType((*Request)(nil), "odinX.Request")
	proto.RegisterType((*Data)(nil), "odinX.Data")
	proto.RegisterType((*Response)(nil), "odinX.Response")
}

func init() { proto.RegisterFile("node.proto", fileDescriptor_0c843d59d2d938e7) }

var fileDescriptor_0c843d59d2d938e7 = []byte{
	// 736 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0x4b, 0x6f, 0xfc, 0x34,
	0x10, 0xd7, 0x6e, 0x92, 0x7d, 0xcc, 0x6e, 0xff, 0x45, 0x56, 0x85, 0xa2, 0xaa, 0x82, 0x2a, 0x17,
	0xaa, 0x16, 0x2d, 0xd2, 0x22, 0x3e, 0x40, 0x5b, 0x0e, 0x95, 0xfa, 0x00, 0xcc, 0xa1, 0x5c, 0xdd,
	0x78, 0xda, 0x58, 0x34, 0x71, 0xb0, 0x9d, 0x5d, 0x95, 0x1b, 0xdc, 0xf9, 0x14, 0x7c, 0x51, 0x34,
	0xb6, 0xb3, 0x0f, 0xa9, 0x88, 0x1e, 0xb8, 0xcd, 0xef, 0x37, 0x0f, 0xcf, 0xfc, 0x32, 0x76, 0x00,
	0x1a, 0x2d, 0x71, 0xd1, 0x1a, 0xed, 0x34, 0xcb, 0xb4, 0x54, 0xcd, 0x2f, 0xc5, 0x02, 0xd2, 0x4b,
	0xf3, 0x62, 0x19, 0x83, 0xb4, 0x11, 0x35, 0xe6, 0x83, 0xd3, 0xc1, 0xd9, 0x94, 0x7b, 0x9b, 0x38,
	0x21, 0xa5, 0xc9, 0x87, 0x81, 0x23, 0xbb, 0x78, 0x84, 0xf4, 0x41, 0x4b, 0x64, 0x05, 0x64, 0xc2,
	0x39, 0x63, 0x7d, 0xc2, 0x6c, 0x39, 0x5f, 0xf8, 0x72, 0x8b, 0x4b, 0xe2, 0x78, 0x70, 0xb1, 0x0b,
	0x98, 0x54, 0xc2, 0xc8, 0xb5, 0x30, 0xe8, 0x6b, 0xcc, 0x96, 0x87, 0x31, 0xec, 0x26, 0xd2, 0x7c,
	0x13, 0x50, 0xd4, 0x90, 0xf9, 0xe4, 0x8f, 0x76, 0xc2, 0x8e, 0x20, 0xb3, 0x4e, 0x18, 0x97, 0x27,
	0xa7, 0x83, 0xb3, 0x84, 0x07, 0x40, 0x6c, 0xb5, 0xae, 0xe5, 0x77, 0x79, 0xea, 0x43, 0x03, 0x60,
	0x9f, 0x41, 0xd2, 0xe8, 0x75, 0x9e, 0xf9, 0x48, 0x32, 0x8b, 0x3f, 0x87, 0x30, 0xe9, 0xbb, 0x60,
	0x5f, 0x42, 0x5a, 0x69, 0xeb, 0xe2, 0x2c, 0xb3, 0xbe, 0x49, 0x6d, 0x1d, 0xf7, 0x0e, 0x76, 0x06,
	0xe3, 0xd6, 0x68, 0xd9, 0x95, 0x2e, 0x0e, 0xf2, 0x29, 0xc6, 0xfc, 0x18, 0x58, 0xde, 0xbb, 0x49,
	0x97, 0x27, 0x2d, 0x8c, 0xf4, 0x5d, 0x6d, 0x75, 0xb9, 0x22, 0x8e, 0x07, 0x17, 0x1d, 0xf7, 0xa4,
	0xb4, 0xf5, 0x2d, 0x6e, 0x8f, 0xbb, 0x52, 0xda, 0x72, 0xef, 0x60, 0x27, 0x90, 0x94, 0x6d, 0xe7,
	0xdb, 0x9d, 0x2d, 0x21, 0xfa, 0xaf, 0xdb, 0x8e, 0x13, 0x4d, 0xde, 0x1a, 0xeb, 0x7c, 0xb4, 0xe7,
	0xbd, 0xc7, 0x9a, 0x13, 0xcd, 0xce, 0x61, 0xd2, 0xa0, 0x5b, 0x6b, 0xf3, 0xab, 0xcd, 0xc7, 0xa7,
	0xc9, 0x4e, 0xaf, 0x0f, 0x81, 0xe6, 0x1b, 0x7f, 0x51, 0x41, 0x4a, 0x43, 0xb2, 0x13, 0x98, 0xd6,
	0xa2, 0xac, 0x54, 0x83, 0x4a, 0x46, 0xdd, 0xb7, 0x04, 0xfb, 0x02, 0xa0, 0x7a, 0x6b, 0xd1, 0xac,
	0x94, 0xd5, 0xfd, 0x27, 0xd8, 0x61, 0x58, 0x01, 0x73, 0x61, 0xca, 0x4a, 0x39, 0x2c, 0x5d, 0x67,
	0xd0, 0x4f, 0x3e, 0xe5, 0x7b, 0x5c, 0x71, 0x0f, 0xe3, 0x28, 0xd5, 0xbb, 0xdf, 0xf7, 0x73, 0x18,
	0xad, 0xb0, 0x91, 0x9b, 0xf2, 0x11, 0x11, 0x6f, 0xd1, 0x28, 0xf1, 0x1a, 0x8b, 0x46, 0x54, 0xdc,
	0x42, 0xe6, 0x15, 0xfd, 0x5f, 0x8a, 0xdd, 0x41, 0x4a, 0xda, 0xef, 0xe4, 0x0d, 0xf6, 0xf2, 0x72,
	0x18, 0xaf, 0xd0, 0x58, 0xa5, 0x9b, 0x58, 0xb0, 0x87, 0x74, 0xba, 0x14, 0xae, 0x9f, 0xd8, 0xdb,
	0xc5, 0xdf, 0x03, 0x48, 0xae, 0xdb, 0xee, 0x5f, 0xab, 0x1d, 0x41, 0x56, 0x6b, 0x89, 0xaf, 0xb1,
	0x56, 0x00, 0x7e, 0x99, 0x5b, 0xc4, 0xb0, 0x36, 0x07, 0x3c, 0x00, 0x62, 0x4b, 0x51, 0x56, 0xe8,
	0x37, 0xe5, 0x80, 0x07, 0x40, 0xa7, 0x96, 0x6d, 0x67, 0xfd, 0x7a, 0x1c, 0x70, 0x6f, 0xfb, 0x48,
	0x6d, 0xd0, 0xfa, 0xad, 0xa0, 0x48, 0x02, 0xd4, 0xb9, 0xab, 0x0c, 0x0a, 0x49, 0xab, 0x40, 0x7c,
	0x0f, 0x8b, 0x6f, 0x20, 0xb9, 0xc7, 0x9a, 0x4a, 0xb9, 0xb7, 0x76, 0x23, 0x1f, 0xd9, 0xdb, 0x56,
	0x86, 0x3b, 0xad, 0x14, 0x8f, 0x30, 0x8e, 0xfb, 0x43, 0x93, 0x49, 0xa3, 0x56, 0xb8, 0x99, 0x2c,
	0x20, 0xda, 0x93, 0x5a, 0x94, 0x74, 0x37, 0xd1, 0xda, 0x7e, 0x4f, 0xb6, 0xcc, 0xfb, 0x33, 0x16,
	0x7f, 0x0c, 0x60, 0xcc, 0xf1, 0xb7, 0x0e, 0xad, 0xa3, 0x6b, 0x2a, 0xda, 0x36, 0x96, 0x25, 0x93,
	0x7d, 0x82, 0xa1, 0x92, 0xb1, 0xd6, 0x50, 0xc9, 0x3d, 0xc5, 0x93, 0xa0, 0x78, 0x50, 0xda, 0xa8,
	0xe7, 0xb7, 0x78, 0xe7, 0x23, 0xa2, 0xd8, 0x8e, 0x5e, 0x82, 0x2c, 0x0c, 0x47, 0x36, 0xf5, 0xf0,
	0x8a, 0xc2, 0xa2, 0xd7, 0x29, 0xe1, 0x01, 0x14, 0x37, 0x90, 0x7e, 0x2f, 0x9c, 0xf0, 0xcf, 0x4c,
	0xe7, 0x2a, 0xdf, 0xc0, 0x9c, 0x7b, 0x7b, 0x9b, 0x31, 0xdc, 0xc9, 0xa0, 0x33, 0x4b, 0xd5, 0x56,
	0x68, 0x7c, 0x27, 0x73, 0x1e, 0x51, 0xf1, 0x13, 0x4c, 0x38, 0xda, 0x56, 0x37, 0x36, 0x7c, 0x27,
	0x2d, 0x83, 0xb8, 0x19, 0xf7, 0x36, 0x5d, 0x7d, 0x29, 0x9c, 0x88, 0xaf, 0x48, 0x7f, 0xf5, 0xe9,
	0x70, 0x3f, 0x8c, 0x20, 0x09, 0x6a, 0xfb, 0x12, 0x37, 0x8a, 0xcc, 0xe5, 0xd7, 0x30, 0xfa, 0xd9,
	0x09, 0x87, 0x74, 0xd1, 0xbc, 0xd5, 0x59, 0xd6, 0x27, 0xd2, 0xd3, 0x7d, 0xdc, 0x03, 0x7a, 0x97,
	0x97, 0x7f, 0x0d, 0x60, 0x7a, 0xd9, 0xb9, 0x4a, 0x1b, 0xf5, 0x3b, 0xb2, 0xaf, 0x20, 0x25, 0xc0,
	0xfa, 0x27, 0x20, 0x0a, 0x7d, 0x7c, 0xb8, 0xc1, 0xb1, 0xd7, 0x0b, 0x98, 0xdc, 0x22, 0xb6, 0x77,
	0xaa, 0xc1, 0xff, 0x0e, 0x3e, 0x87, 0xf1, 0x0f, 0xcf, 0xcf, 0x1f, 0x8a, 0x7d, 0x1a, 0xf9, 0xbf,
	0xcd, 0xb7, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0x5a, 0xc5, 0x37, 0x6d, 0x7b, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StaterClient is the client API for Stater service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StaterClient interface {
	Status(ctx context.Context, in *Args, opts ...grpc.CallOption) (*Node, error)
}

type staterClient struct {
	cc *grpc.ClientConn
}

func NewStaterClient(cc *grpc.ClientConn) StaterClient {
	return &staterClient{cc}
}

func (c *staterClient) Status(ctx context.Context, in *Args, opts ...grpc.CallOption) (*Node, error) {
	out := new(Node)
	err := c.cc.Invoke(ctx, "/odinX.Stater/Status", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StaterServer is the server API for Stater service.
type StaterServer interface {
	Status(context.Context, *Args) (*Node, error)
}

func RegisterStaterServer(s *grpc.Server, srv StaterServer) {
	s.RegisterService(&_Stater_serviceDesc, srv)
}

func _Stater_Status_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Args)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaterServer).Status(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odinX.Stater/Status",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaterServer).Status(ctx, req.(*Args))
	}
	return interceptor(ctx, in, info, handler)
}

var _Stater_serviceDesc = grpc.ServiceDesc{
	ServiceName: "odinX.Stater",
	HandlerType: (*StaterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Status",
			Handler:    _Stater_Status_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "node.proto",
}

// AuthorizeClient is the client API for Authorize service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthorizeClient interface {
	Auth(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	KeepLine(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	OffLine(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type authorizeClient struct {
	cc *grpc.ClientConn
}

func NewAuthorizeClient(cc *grpc.ClientConn) AuthorizeClient {
	return &authorizeClient{cc}
}

func (c *authorizeClient) Auth(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/odinX.Authorize/Auth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizeClient) KeepLine(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/odinX.Authorize/KeepLine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizeClient) OffLine(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/odinX.Authorize/OffLine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthorizeServer is the server API for Authorize service.
type AuthorizeServer interface {
	Auth(context.Context, *Request) (*Response, error)
	KeepLine(context.Context, *Request) (*Response, error)
	OffLine(context.Context, *Request) (*Response, error)
}

func RegisterAuthorizeServer(s *grpc.Server, srv AuthorizeServer) {
	s.RegisterService(&_Authorize_serviceDesc, srv)
}

func _Authorize_Auth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).Auth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odinX.Authorize/Auth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).Auth(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authorize_KeepLine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).KeepLine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odinX.Authorize/KeepLine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).KeepLine(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authorize_OffLine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeServer).OffLine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odinX.Authorize/OffLine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeServer).OffLine(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Authorize_serviceDesc = grpc.ServiceDesc{
	ServiceName: "odinX.Authorize",
	HandlerType: (*AuthorizeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Auth",
			Handler:    _Authorize_Auth_Handler,
		},
		{
			MethodName: "KeepLine",
			Handler:    _Authorize_KeepLine_Handler,
		},
		{
			MethodName: "OffLine",
			Handler:    _Authorize_OffLine_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "node.proto",
}
